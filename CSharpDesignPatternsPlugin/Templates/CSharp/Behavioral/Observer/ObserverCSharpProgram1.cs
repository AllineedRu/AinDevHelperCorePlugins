using System;

namespace AinDevHelperObserverPattern {
    /// <summary>
    /// Паттерн "Наблюдатель" (Observer) используется для установления зависимости типа "один ко многим" между объектами, 
    /// так что когда один объект меняется, все зависящие от него объекты уведомляются и обновляются автоматически. 
    ///
    /// Рассмотрим пример использования паттерна "Наблюдатель" на примере системы уведомлений в социальной сети.
    /// У нас есть интерфейс ISubscriber, который определяет метод для обновления подписчиков, и класс SocialMediaPage, 
    /// который представляет страницу в социальной сети и уведомляет своих подписчиков о новых постах.
    /// 
    /// В данном примере класс SocialMediaPage представляет страницу в социальной сети, которая может иметь несколько подписчиков. 
    /// Когда на странице появляется новый пост, метод PostNewContent уведомляет всех подписчиков о новом контенте путем вызова метода Update у каждого подписчика.
    /// При запуске программы создаются два подписчика, которые добавляются к странице в социальной сети. 
    /// Затем создается два поста, и каждый подписчик получает уведомление о новом посте. 
    /// После этого один из подписчиков удаляется, и только один подписчик получит уведомление о последнем посте.
    /// </summary>
    public static class Program {

        public static void Main() {
            Console.WriteLine("=======================================================================");
            Console.WriteLine("Демонстрация применения шаблона проектирования \"Наблюдатель\" (Observer)");
            Console.WriteLine("=======================================================================");

            // Пример использования паттерна "Наблюдатель" для уведомлений в социальной сети
            SocialMediaPage socialMediaPage = new SocialMediaPage();

            Subscriber subscriber1 = new Subscriber("Петя");
            Subscriber subscriber2 = new Subscriber("Вася");

            socialMediaPage.AddSubscriber(subscriber1);
            socialMediaPage.AddSubscriber(subscriber2);

            socialMediaPage.PostNewContent("Сегодня важное событие!");

            socialMediaPage.RemoveSubscriber(subscriber1);

            socialMediaPage.PostNewContent("Еще один пост для подписчиков");
        }
    }    
}