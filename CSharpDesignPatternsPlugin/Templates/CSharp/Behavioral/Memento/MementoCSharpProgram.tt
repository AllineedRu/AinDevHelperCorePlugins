<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using System;

namespace AinDevHelperMementoPattern {
    /// <summary>
    /// Представим ситуацию, когда мы разрабатываем текстовый редактор, который должен иметь функциональность отмены и возврата действий (undo/redo). 
    /// Мы можем использовать паттерн Memento для сохранения состояния текстового редактора и его истории изменений.
    ///
    /// В этом примере у нас есть класс TextDocument, который представляет текстовый документ. 
    /// У него есть методы для обновления текста, отмены (Undo) и возврата (Redo) изменений. 
    /// Метод Save сохраняет текущее состояние текста в виде объекта TextDocumentMemento, который добавляется в стек _mementos.
    /// При запуске программы создается текстовый документ, изменяется его текст, затем выполняется отмена изменений и возврат к предыдущему состоянию. 
    /// Это демонстрирует использование паттерна Memento для сохранения и восстановления состояния объекта.
    /// </summary>
    public static class Program {

        public static void Main() {
            Console.WriteLine("=======================================================================");
            Console.WriteLine("Демонстрация применения шаблона проектирования \"Хранитель\" (Memento)");
            Console.WriteLine("=======================================================================");

            TextDocument document = new TextDocument("Документ 1", "Пример исходного текста документа");

            document.PrintText();
            
            document.UpdateText("Измененный текст");
            document.PrintText();

            document.UpdateText("Снова измененный текст");
            document.PrintText();

            document.UpdateText("Ещё раз изменённый текст");
            document.PrintText();

            document.Undo();    // Отмена правок: "Ещё раз изменённый текст" -> "Снова изменённый текст"
            document.PrintText();

            document.Undo();    // Отмена правок: "Снова изменённый текст" -> "Измененный текст"
            document.PrintText();

            document.Redo();    // Вернуть: "Измененный текст" -> "Снова изменённый текст"
            document.PrintText();

            document.Redo();    // Вернуть: "Снова изменённый текст" -> "Ещё раз изменённый текст"
            document.PrintText();

            document.Redo();    // Конец очереди для возврата (Redo) правок, изменений текста документа не произошло. Повторно вывод строки "Ещё раз изменённый текст"
            document.PrintText();

            document.Undo();    // Отмена правок: "Ещё раз изменённый текст" -> "Снова изменённый текст"
            document.PrintText();

            document.Undo();    // Отмена правок: "Снова изменённый текст" -> "Измененный текст"
            document.PrintText();

            document.Undo();    // Отмена правок: "Измененный текст" -> "Пример исходного текста документа"
            document.PrintText();

            document.Undo();    // Конец очереди для отмены правок, изменений текста документа не произошло, текст вернулся в своё исходное состояние
            document.PrintText();
        }
    }    
}